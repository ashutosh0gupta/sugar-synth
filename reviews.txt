CMSB
============
Major changes
============
The total rule depth actually captures two distinct properties: (D1) the depth of the match and (D2) the depth of the modification. Trying to minimize D1 is natural as deep matches are *biologically* implausible (as molecules would need to « sense » a non local property), but allowing D2>1 is *physically* implausible (which is worst) because 3 bodies collision are very unlikely. Minimizing the number of rules seems sound however.
I skimmed through the presented pseudo code (which seem reasonable) but two lemmas are missing. They would state that the generated rules are sound (only reachable trees can be synthesized) and complete (all reachable trees can be assembled). If the algorithm does not satisfy these properties it should be stated clearly.
Also one is left wondering whether the generated rules are optimal w.r.t to depth: for instance it seems that one can generate a rule set for the example of Fig. 3 with rules with a lower depth.
First, the application is not clear. In which circumstances would we need to know the generating rules for glycans? If rules could be linked to enzymes, then the tool could propose a generating set of enzymes for a given glycan set, but the authors do not discuss exactly how enzymes and rules are linked. Are generating rules constrained to only those known to be realized by an enzyme?
The main shortcoming is that the method assumes that an absence of a glycan molecule means that it cannot be produced, while it could just mean that its production is less frequent. This is discussed in E.2 but should be mentioned in the introduction.
A more in-depth analysis of the results for the biological data would have been interesting. Do the rules differ across data sets or are some the same? How does a typical rule look like (so a concrete example, in addition to the abstract example)?
"We identified a new area of application for formal methods in biology." This cannot really be claimed since the last author has already published papers on the topic (8,11).
A more thorough future evaluation on biological data could consist of running GLYSYNTH on glycans from samples where generating enzymes are known and checking if the rules uncovered are consistent with these enzymes (assuming rules can be linked to enzymes).

===========
Minor issues 
===========
The paper is very densely written and interesting definitions are squashed into text paragraphs rather than being given their own space. After a while, the reader may be overwhelmed by the density and what they were trying to cover. To put it differently, it looks a bit like a journal paper squashed into a conference;  would definitely benefit by being cut down and unpacked.
You write “there are approximately 10^70 possible rule sets” : Out of how many rules? any rough estimate would do
Otherwise, a solution of the constraints gives a set of rules.” :The solution is probably not unique; would it be possible to enumerate all possible solutions, or would this be infeasible?
Does your tool generate a minimal set of rules (in terms of cardinality of the rule set)? Would be nice to squeeze a few related words in.
“the height of searched molecules.” : Some readers might find it helpful if you explain what you mean with this phrase;
“The process of glycosylation is stochastic” :Do you really mean ‘stochastic’ or actually ‘non-deterministic’?
re your pseudocode notation style:I would appreciate explicit closing brackets, such as ‘end if’, ‘end while’, or something similar;
Algorithm1: I suggest to add a brief in-line comment for ‘ while tt do’;
Some information about hardware & software platform for computational experiments is completely absent.
“The generated constraints involve Boolean variable,”-> Boolean variables ?
“If we assume that all these oligomers are built by starting from a root GalNAc (yellow square) by adding one monomer at a time (lines between glycans represent monomer addition reactions).”-> here seems to be something missing;
“ In the lower part of the figure, we illustrate if the enzymes are split …”->  In the lower part of the figure, we illustrate that if the enzymes are split … ? The entire sentence is a bit lengthy; might be a good idea to split it somehow,
“Here, we are considering only single compartment case.” Here, we are considering only the single compartment case.
referencing specific sections, algorithms, appendices should be capitalised; e.g., see Section 2, Algorithm 1, Appendix B;
There is a layout problem:  the figure captions are hardly separated from the actual text.
It is not clear to me whether a set of rules is unique or whether the algorithm reports alternative sets of rules if they exist or the set of all possible generating rules even if redundant.
The frequency of rule realizations could also be reported for the given set of glycans.
While the pseudo-code is given, there is no link to the tool itself. If the authors wish the tool to be used, they should provide a link to a tool page with documentation, tutorial, and installation help.
Suggestions
In the future, authors may also consider allowing a set of enzymes as input and checking whether these can generate the observed glycans, or to allow users to specify additional rules that are known to play a role.
 

 
TACAS
Review 1
-       How generic is the templating mechanism? //done
-       How many iterations may be necessary in the worst case (or even in the experiments for that matter?) //done
-       How large is the search space? // done
-       Why is it sufficient to exclude a single solution in each step? //done
-       Will this algorithm always terminate? //done
-       viability / relevance of the synthesized solutions?// done

Review 2
Related work: Kappa calculus framework, citations on applications of formal methods to biological structures,
some work done in theoretical chemistry might be relevant (e.g., the work of Christoph Flamm from University of Vienna)
============
Minor issues
============
pp2. "encoding that are there other molecules"... I am not able to get this sentence.
pp5. Fig. 2 too small to see the details
pp6. Fig 3 better organisation/typesetting would help, e.g., tikz
pp7.  the formal part following the definition 1 should be more structured to become readable
pp7. do not use text directly typeset in math mode ($\mathit{...}$ or similar solution would help
pp8. the extended \cup symbol should be explained
pp9. typesetting of the algorithm should be improved to easily see what is the output/requirements
pp11. "creates the above constraints and store them..." -> ... _stores_ them
pp11. definitions mixed with algorithms seems strange I think you should define all the formal stuff first and then present the algorithms
pp12. ENOCDE -> ENCODE
pp16. "If we did not budget large enough parameters..." -> what kind of parameters?
pp16. "tool runs for a long time, which is typical" -> why?
general -- the latex tricks narrowing the space between figures and the text should be definitely avoided!

Review 3
there are no attempts to connect the results to any sort of non-biological setting.
As a result, the work sounds like an application of formal methods to biology
and would more likely find a better home in a computational biology meeting such as CSBio.
